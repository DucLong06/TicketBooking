version: "3.8"
services:
    postgres:
        image: postgres:15
        volumes:
            - postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=Ticketbooking
            - POSTGRES_USER=admin
            - POSTGRES_PASSWORD=123456

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        volumes:
            - static_files:/app/staticfiles
            - media_files:/app/media
        env_file:
            - .env
        depends_on:
            redis:
                condition: service_healthy

    # Uncomment the following lines if you want to use Redis
    redis:
        image: redis:7
        volumes:
            - redis_data:/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 5s
            retries: 5

    celery:
        build:
            context: ./backend
        command: >
            sh -c "python manage.py migrate --noinput &&
                  celery -A core worker -l INFO"
        working_dir: /app
        volumes:
            - ./backend:/app
        env_file:
            - .env
        depends_on:
            - backend
            - redis
            - postgres

    celery-beat:
        build:
            context: ./backend
        command: >
            sh -c "python manage.py migrate --noinput &&
                  celery -A core beat -l INFO "
        working_dir: /app
        volumes:
            - ./backend:/app
        env_file:
            - .env
        depends_on:
            - backend
            - redis
            - postgres

    frontend:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        volumes:
            - frontend_dist:/app/dist

    nginx:
        build:
            context: .
            dockerfile: nginx/Dockerfile
        ports:
            - "80:80"
        volumes:
            - static_files:/app/staticfiles
            - media_files:/app/media
            - frontend_dist:/frontend
        depends_on:
            - backend
            - frontend

volumes:
    redis_data:
    postgres_data:
    static_files:
    media_files:
    frontend_dist:
