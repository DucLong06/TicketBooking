services:
    frontend_builder:
        build:
            context: ./frontend
            dockerfile: Dockerfile
            target: build
        container_name: booking_frontend_builder
        volumes:
            - frontend_build:/app/dist
        command: echo "Frontend built successfully"
        networks:
            - booking_network_prod

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        container_name: booking_backend_prod
        restart: always
        command: >
            sh -c "python manage.py migrate &&
                   python manage.py collectstatic --noinput &&
                   gunicorn core.wsgi:application 
                   --bind 0.0.0.0:8000 
                   --workers 3
                   --threads 2
                   --worker-class gthread
                   --worker-connections 1000
                   --max-requests 1000
                   --max-requests-jitter 100
                   --timeout 60
                   --graceful-timeout 30
                   --keep-alive 5
                   --access-logfile -
                   --error-logfile -
                   --log-level info"
        volumes:
            - frontend_build:/app/frontend_build
            - static_volume_prod:/app/staticfiles
            - media_volume_prod:/app/media
            - logs_volume_prod:/app/logs
        ports:
            - "8000:8000"
        env_file:
            - .env
        deploy:
            resources:
                limits:
                    cpus: "1.5"
                    memory: 2G
                reservations:
                    cpus: "0.5"
                    memory: 512M
        networks:
            - booking_network_prod
        depends_on:
            - frontend_builder

    celery_worker:
        build:
            context: ./backend
        container_name: booking_celery_worker_prod
        restart: always
        command: >
            celery -A core worker
            --loglevel=info
            --concurrency=2
            --max-tasks-per-child=1000
            --prefetch-multiplier=4
        volumes:
            - logs_volume_prod:/app/logs
        env_file:
            - .env
        deploy:
            resources:
                limits:
                    cpus: "0.5"
                    memory: 512M
        depends_on:
            - backend
        networks:
            - booking_network_prod

    celery_beat:
        build:
            context: ./backend
        container_name: booking_celery_beat_prod
        restart: always
        command: celery -A core beat -l info
        volumes:
            - logs_volume_prod:/app/logs
        env_file:
            - .env
        deploy:
            resources:
                limits:
                    cpus: "0.25"
                    memory: 256M
        depends_on:
            - backend
        networks:
            - booking_network_prod

volumes:
    frontend_build:
    static_volume_prod:
    media_volume_prod:
    logs_volume_prod:

networks:
    booking_network_prod:
        external: true
